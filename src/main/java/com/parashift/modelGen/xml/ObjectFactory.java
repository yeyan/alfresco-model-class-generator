//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.05.06 at 02:48:06 PM CST 
//


package com.parashift.modelGen.xml;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the com.parashift.modelGen.xml package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: com.parashift.modelGen.xml
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Model }
     * 
     */
    public Model createModel() {
        return new Model();
    }

    /**
     * Create an instance of {@link PropertyOverride }
     * 
     */
    public PropertyOverride createPropertyOverride() {
        return new PropertyOverride();
    }

    /**
     * Create an instance of {@link Class }
     * 
     */
    public Class createClass() {
        return new Class();
    }

    /**
     * Create an instance of {@link Property }
     * 
     */
    public Property createProperty() {
        return new Property();
    }

    /**
     * Create an instance of {@link NamedValue }
     * 
     */
    public NamedValue createNamedValue() {
        return new NamedValue();
    }

    /**
     * Create an instance of {@link Association }
     * 
     */
    public Association createAssociation() {
        return new Association();
    }

    /**
     * Create an instance of {@link Model.DataTypes }
     * 
     */
    public Model.DataTypes createModelDataTypes() {
        return new Model.DataTypes();
    }

    /**
     * Create an instance of {@link Model.Namespaces }
     * 
     */
    public Model.Namespaces createModelNamespaces() {
        return new Model.Namespaces();
    }

    /**
     * Create an instance of {@link Model.Imports }
     * 
     */
    public Model.Imports createModelImports() {
        return new Model.Imports();
    }

    /**
     * Create an instance of {@link Model.Constraints }
     * 
     */
    public Model.Constraints createModelConstraints() {
        return new Model.Constraints();
    }

    /**
     * Create an instance of {@link Model.Types }
     * 
     */
    public Model.Types createModelTypes() {
        return new Model.Types();
    }

    /**
     * Create an instance of {@link Model.Aspects }
     * 
     */
    public Model.Aspects createModelAspects() {
        return new Model.Aspects();
    }

    /**
     * Create an instance of {@link Aspect }
     * 
     */
    public Aspect createAspect() {
        return new Aspect();
    }

    /**
     * Create an instance of {@link ChildAssociation }
     * 
     */
    public ChildAssociation createChildAssociation() {
        return new ChildAssociation();
    }

    /**
     * Create an instance of {@link Constraint }
     * 
     */
    public Constraint createConstraint() {
        return new Constraint();
    }

    /**
     * Create an instance of {@link Type }
     * 
     */
    public Type createType() {
        return new Type();
    }

    /**
     * Create an instance of {@link MandatoryDef }
     * 
     */
    public MandatoryDef createMandatoryDef() {
        return new MandatoryDef();
    }

    /**
     * Create an instance of {@link PropertyOverride.Constraints }
     * 
     */
    public PropertyOverride.Constraints createPropertyOverrideConstraints() {
        return new PropertyOverride.Constraints();
    }

    /**
     * Create an instance of {@link Class.Properties }
     * 
     */
    public Class.Properties createClassProperties() {
        return new Class.Properties();
    }

    /**
     * Create an instance of {@link Class.Associations }
     * 
     */
    public Class.Associations createClassAssociations() {
        return new Class.Associations();
    }

    /**
     * Create an instance of {@link Class.Overrides }
     * 
     */
    public Class.Overrides createClassOverrides() {
        return new Class.Overrides();
    }

    /**
     * Create an instance of {@link Class.MandatoryAspects }
     * 
     */
    public Class.MandatoryAspects createClassMandatoryAspects() {
        return new Class.MandatoryAspects();
    }

    /**
     * Create an instance of {@link Property.Index }
     * 
     */
    public Property.Index createPropertyIndex() {
        return new Property.Index();
    }

    /**
     * Create an instance of {@link Property.Constraints }
     * 
     */
    public Property.Constraints createPropertyConstraints() {
        return new Property.Constraints();
    }

    /**
     * Create an instance of {@link NamedValue.List }
     * 
     */
    public NamedValue.List createNamedValueList() {
        return new NamedValue.List();
    }

    /**
     * Create an instance of {@link Association.Source }
     * 
     */
    public Association.Source createAssociationSource() {
        return new Association.Source();
    }

    /**
     * Create an instance of {@link Association.Target }
     * 
     */
    public Association.Target createAssociationTarget() {
        return new Association.Target();
    }

    /**
     * Create an instance of {@link Model.DataTypes.DataType }
     * 
     */
    public Model.DataTypes.DataType createModelDataTypesDataType() {
        return new Model.DataTypes.DataType();
    }

    /**
     * Create an instance of {@link Model.Namespaces.Namespace }
     * 
     */
    public Model.Namespaces.Namespace createModelNamespacesNamespace() {
        return new Model.Namespaces.Namespace();
    }

    /**
     * Create an instance of {@link Model.Imports.Import }
     * 
     */
    public Model.Imports.Import createModelImportsImport() {
        return new Model.Imports.Import();
    }

}
